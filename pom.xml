<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.tarantool</groupId>
  <artifactId>connector</artifactId>
  <version>1.9.46</version>
  <packaging>jar</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <junit.jupiter.version>5.4.2</junit.jupiter.version>
    <snakeyml.version>1.23</snakeyml.version>
    <mockito.version>1.10.19</mockito.version>
    <sfl4j.version>1.7.26</sfl4j.version>
    <project.testResources>${project.basedir}/src/test/resources</project.testResources>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <name>Tarantool Connector for Java</name>
  <url>https://github.com/tarantool/tarantool-java</url>
  <description>Tarantool client for Java</description>

  <licenses>
    <license>
      <name>The BSD licence</name>
      <url>http://opensource.org/licenses/BSD-3-Clause</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <url>https://github.com/tarantool/tarantool-java</url>
    <connection>scm:git:git://github.com/tarantool/tarantool-java.git</connection>
    <developerConnection>scm:git:git@github.com:tarantool/tarantool-java.git</developerConnection>
  </scm>

  <developers>
    <developer>
      <name>Dmitry Grytsovets</name>
      <email>dmitry.grytsovets@gmail.com</email>
      <organization>Tarantool</organization>
      <organizationUrl>http://tarantool.org/</organizationUrl>
    </developer>
  </developers>

  <dependencies>
    <!-- Основные зависимости -->
    <dependency>
      <groupId>com.github.jsqlparser</groupId>
      <artifactId>jsqlparser</artifactId>
      <version>4.6</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${sfl4j.version}</version>
      <!-- Убрано <scope>provided</scope>, чтобы включить SLF4J в uber-jar -->
    </dependency>

    <!-- Тестовые зависимости -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <version>${snakeyml.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <distributionManagement>
    <repository>
      <id>maven-releases</id>
      <name>Nexus Maven Releases</name>
      <url>http://localhost:9081/repository/maven-releases</url>
    </repository>
  </distributionManagement>

  <build>
    <plugins>
      <!-- Компиляция исходного кода -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>

      <!-- Maven Shade Plugin для создания uber-jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <!-- Имя итогового JAR-файла -->
              <finalName>${project.artifactId}-${project.version}</finalName>
              <!-- Включение всех зависимостей -->
              <createDependencyReducedPom>true</createDependencyReducedPom>
              <!-- Объединение метаданных (если необходимо) -->
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
              <!-- Опционально: переопределение конфликтующих классов или ресурсов -->
              <relocations>
                <!-- Пример: переименование пакета SLF4J, если возникает конфликт -->
                <!--
                <relocation>
                  <pattern>org.slf4j</pattern>
                  <shadedPattern>shaded.org.slf4j</shadedPattern>
                </relocation>
                -->
              </relocations>
              <!-- Опционально: указание манифеста -->
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Maven Deploy Plugin (Optional Configuration) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>3.0.0-M1</version>
        <configuration>
          <repositoryId>maven-releases</repositoryId>
          <!-- The URL is inherited from distributionManagement -->
        </configuration>
      </plugin>

      <!-- Остальные плагины остаются без изменений -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>parse-version</id>
            <goals>
              <goal>parse-version</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>templating-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <id>filter-src</id>
            <goals>
              <goal>filter-sources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M3</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.config.file>
              ${project.testResources}/jul-silent.properties
            </java.util.logging.config.file>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0-M3</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <trimStackTrace>false</trimStackTrace>
          <systemPropertyVariables>
            <java.util.logging.config.file>
              ${project.testResources}/jul-silent.properties
            </java.util.logging.config.file>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.2</version>
        <configuration>
          <includes>
          </includes>
          <!--
              Exclude generated sources to prevent a
              coveralls-maven-plugin error.
          -->
          <excludes>
            org/tarantool/Version.class
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <version>4.3.0</version>
        <dependencies>
          <!-- Support reporting to coveralls on Java 9. -->
          <!-- https://github.com/trautonen/coveralls-maven-plugin/issues/112 -->
          <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.0.0</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>8.19</version>
            </dependency>
          </dependencies>
          <configuration>
            <configLocation>src/test/resources/checkstyle.xml</configLocation>
            <violationSeverity>error</violationSeverity>
            <failOnViolation>true</failOnViolation>
            <failsOnError>true</failsOnError>
            <consoleOutput>true</consoleOutput>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.2.0</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <failOnWarnings>true</failOnWarnings>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>
</project>
